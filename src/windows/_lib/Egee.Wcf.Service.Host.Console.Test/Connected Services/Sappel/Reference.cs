//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Egee.Wcf.Service.Host.Console.Test.Sappel {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Sappel.ISappelService")]
    public interface ISappelService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISappelService/Init", ReplyAction="http://tempuri.org/ISappelService/InitResponse")]
        Egee.Wcf.Service.Host.Console.Test.Sappel.InitResponse Init(Egee.Wcf.Service.Host.Console.Test.Sappel.InitRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISappelService/Init", ReplyAction="http://tempuri.org/ISappelService/InitResponse")]
        System.Threading.Tasks.Task<Egee.Wcf.Service.Host.Console.Test.Sappel.InitResponse> InitAsync(Egee.Wcf.Service.Host.Console.Test.Sappel.InitRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISappelService/GetVersion", ReplyAction="http://tempuri.org/ISappelService/GetVersionResponse")]
        Egee.Wcf.Service.Host.Console.Test.Sappel.GetVersionResponse GetVersion(Egee.Wcf.Service.Host.Console.Test.Sappel.GetVersionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISappelService/GetVersion", ReplyAction="http://tempuri.org/ISappelService/GetVersionResponse")]
        System.Threading.Tasks.Task<Egee.Wcf.Service.Host.Console.Test.Sappel.GetVersionResponse> GetVersionAsync(Egee.Wcf.Service.Host.Console.Test.Sappel.GetVersionRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Init", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class InitRequest {
        
        public InitRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InitResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class InitResponse {
        
        public InitResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetVersion", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetVersionRequest {
        
        public GetVersionRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetVersionResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetVersionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string GetVersionResult;
        
        public GetVersionResponse() {
        }
        
        public GetVersionResponse(string GetVersionResult) {
            this.GetVersionResult = GetVersionResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISappelServiceChannel : Egee.Wcf.Service.Host.Console.Test.Sappel.ISappelService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SappelServiceClient : System.ServiceModel.ClientBase<Egee.Wcf.Service.Host.Console.Test.Sappel.ISappelService>, Egee.Wcf.Service.Host.Console.Test.Sappel.ISappelService {
        
        public SappelServiceClient() {
        }
        
        public SappelServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SappelServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SappelServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SappelServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Egee.Wcf.Service.Host.Console.Test.Sappel.InitResponse Init(Egee.Wcf.Service.Host.Console.Test.Sappel.InitRequest request) {
            return base.Channel.Init(request);
        }
        
        public System.Threading.Tasks.Task<Egee.Wcf.Service.Host.Console.Test.Sappel.InitResponse> InitAsync(Egee.Wcf.Service.Host.Console.Test.Sappel.InitRequest request) {
            return base.Channel.InitAsync(request);
        }
        
        public Egee.Wcf.Service.Host.Console.Test.Sappel.GetVersionResponse GetVersion(Egee.Wcf.Service.Host.Console.Test.Sappel.GetVersionRequest request) {
            return base.Channel.GetVersion(request);
        }
        
        public System.Threading.Tasks.Task<Egee.Wcf.Service.Host.Console.Test.Sappel.GetVersionResponse> GetVersionAsync(Egee.Wcf.Service.Host.Console.Test.Sappel.GetVersionRequest request) {
            return base.Channel.GetVersionAsync(request);
        }
    }
}
